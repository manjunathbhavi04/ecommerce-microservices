# Maven
/target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
.mvn/wrapper/maven-wrapper.jar

# Gradle
.gradle/
/build/

# IDEs
.idea/                  # IntelliJ IDEA
.vscode/                # VS Code (if you don't want to commit workspace settings)
*.iml                   # IntelliJ IDEA module files
*.ipr
*.iws
.settings/              # Eclipse
.project
.classpath

# OS X
.DS_Store
.Trashes

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Spring Boot
*.jar
*.war
*.zip
*.tar.gz
/src/main/resources/application*.properties  # Ignore local application properties (if you use profiles like -dev, -prod)
/src/main/resources/application*.yml         # Same for YAML
!/src/main/resources/application.properties  # EXCEPT the base application.properties (you might want to commit base config)
!/src/main/resources/application.yml         # EXCEPT the base application.yml

# This is a bit tricky for application.properties.
# If you intend to commit a base application.properties without sensitive data,
# and use environment variables/config server for secrets, then the above lines are okay.
# If you only have one application.properties with secrets, you'd want to ignore it completely:
# src/main/resources/application.properties

# Log files
*.log
logs/
*.log.*

# Specific to Spring Boot multi-module
# Each sub-module will also have a 'target' directory, which is covered by the root /target/
# If you have an empty folder that Maven creates (e.g. .m2 or .idea/libraries)
# add !/path/to/folder/ but ensure you don't commit build artifacts.